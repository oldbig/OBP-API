package code.bankconnectors.akka

import code.bankconnectors.ConnectorBuilderUtil

import scala.collection.immutable.List
import scala.language.postfixOps

object AkkaConnectorBuilder extends App {

  val genMethodNames = List(
    //    "getEmptyBankAccount", //not useful!
    //    "getCounterpartyFromTransaction", //not useful!
    //    "getCounterpartiesFromTransaction",//not useful!
    
    "getAdapterInfo",
    "getChallengeThreshold",
    "getChargeLevel",
    "createChallenge",
    "getBank",
    "getBanks",
    "getBankAccountsForUser",
    "getUser",
    "getBankAccount",
    "getBankAccount",
    "getBankAccountsBalances",
    "getCoreBankAccounts",
    "getBankAccountsHeld",
    "checkBankAccountExists",
    "getCounterparty",
    "getCounterpartyTrait",
    "getCounterpartyByCounterpartyId",
    "getCounterpartyByIban",
    "getCounterparties",
    "getTransactions",
    "getTransactionsCore",
    "getTransaction",
    "getPhysicalCards",
    "getPhysicalCardForBank",
    "deletePhysicalCardForBank",
    "getPhysicalCardsForBank",
    "createPhysicalCard",
    "updatePhysicalCard",
    "makePayment",
    "makePaymentv200",
    "makePaymentv210",
    "makePaymentImpl",
    "createTransactionRequest",
    "createTransactionRequestv200",
    "getStatus",
    "getChargeValue",
    "createTransactionRequestv210",
    "createTransactionRequestImpl",
    "createTransactionRequestImpl210",
    "saveTransactionRequestTransaction",
    "saveTransactionRequestTransactionImpl",
    "saveTransactionRequestChallenge",
    "saveTransactionRequestChallengeImpl",
    "saveTransactionRequestStatusImpl",
    "getTransactionRequests",
    "getTransactionRequests210",
    "getTransactionRequestStatuses",
    "getTransactionRequestStatusesImpl",
    "getTransactionRequestsImpl",
    "getTransactionRequestsImpl210",
    "getTransactionRequestImpl",
    "getTransactionRequestTypes",
    "getTransactionRequestTypesImpl",
    "answerTransactionRequestChallenge",
    "createTransactionAfterChallenge",
    "createTransactionAfterChallengev200",
    "createTransactionAfterChallengeV210",
    "updateBankAccount",
    "createBankAndAccount",
    "createBankAccount",
    "createSandboxBankAccount",
    "setAccountHolder",
    "accountExists",
    "removeAccount",
    "getMatchingTransactionCount",
    "createImportedTransaction",
    "updateAccountBalance",
    "setBankAccountLastUpdated",
    "updateAccountLabel",
    "updateAccount",
    "getProducts",
    "getProduct",
    "createOrUpdateBranch",
    "createOrUpdateBank",
    "createOrUpdateAtm",
    "createOrUpdateProduct",
    "createOrUpdateFXRate",
    "getBranch",
    "getBranches",
    "getAtm",
    "getAtms",
    "accountOwnerExists",
    "createViews",
    "getCurrentFxRate",
    "getCurrentFxRateCached",
    "getTransactionRequestTypeCharge",
    "UpdateUserAccoutViewsByUsername",
    "createTransactionAfterChallengev300",
    "makePaymentv300",
    "createTransactionRequestv300",
    "getTransactionRequestTypeCharges",
    "createCounterparty",
    "checkCustomerNumberAvailable",
    "createCustomer",
    "updateCustomerScaData",
    "updateCustomerCreditData",
    "updateCustomerGeneralData",
    "getCustomersByUserId",
    "getCustomerByCustomerId",
    "getCustomerByCustomerNumber",
    "getCustomerAddress",
    "createCustomerAddress",
    "updateCustomerAddress",
    "deleteCustomerAddress",
    "createTaxResidence",
    "getTaxResidence",
    "deleteTaxResidence",
    "getCustomers",
    "getCheckbookOrders",
    "getStatusOfCreditCardOrder",
    "createUserAuthContext",
    "createUserAuthContextUpdate",
    "deleteUserAuthContexts",
    "deleteUserAuthContextById",
    "getUserAuthContexts",
    "createOrUpdateProductAttribute",
    "getProductAttributeById",
    "getProductAttributesByBankAndCode",
    "deleteProductAttribute",
    "getAccountAttributeById",
    "createOrUpdateAccountAttribute",
    "createAccountAttributes",
    "getAccountAttributesByAccount",
    "createOrUpdateCardAttribute",
    "getCardAttributeById",
    "getCardAttributesFromProvider",
    "createAccountApplication",
    "getAllAccountApplication",
    "getAccountApplicationById",
    "updateAccountApplicationStatus",
    "getOrCreateProductCollection",
    "getProductCollection",
    "getOrCreateProductCollectionItem",
    "getProductCollectionItem",
    "getProductCollectionItemsTree",
    "createMeeting",
    "getMeetings",
    "getMeeting",
    "createOrUpdateKycCheck",
    "createOrUpdateKycDocument",
    "createOrUpdateKycMedia",
    "createOrUpdateKycStatus",
    "getKycChecks",
    "getKycDocuments",
    "getKycMedias",
    "getKycStatuses",
    "createMessage",
    "makeHistoricalPayment",
    // new removed comments
    "validateChallengeAnswer",
    "getBankLegacy",
    "getBanksLegacy",
    "getBankAccountsForUserLegacy",
    "updateUserAccountViewsOld",
    "getBankAccountLegacy",
    "getBankAccountByIban",
    "getBankAccountByRouting",
    "getBankAccounts",
    "getCoreBankAccountsLegacy",
    "getBankAccountsHeldLegacy",
    "checkBankAccountExistsLegacy",
    "getCounterpartyByCounterpartyIdLegacy",
    "getCounterpartiesLegacy",
    "getTransactionsLegacy",
    "getTransactionLegacy",
    "getPhysicalCardsForBankLegacy",
    "createPhysicalCardLegacy",
    "createBankAccountLegacy",
    "getBranchLegacy",
    "getAtmLegacy",
    "getCustomerByCustomerIdLegacy",
  )

  ConnectorBuilderUtil.generateMethods(genMethodNames,
    "src/main/scala/code/bankconnectors/akka/AkkaConnector_vDec2018.scala",
    "(southSideActor ? req).mapTo[InBound].map(Box !!(_))")
}
