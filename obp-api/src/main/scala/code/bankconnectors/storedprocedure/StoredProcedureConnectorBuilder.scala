package code.bankconnectors.storedprocedure

import code.bankconnectors.ConnectorBuilderUtil
import net.liftweb.util.StringHelpers

import scala.collection.immutable.List
import scala.language.postfixOps

object StoredProcedureConnectorBuilder extends App {

  val genMethodNames = List(
    "getAdapterInfo",
    "getChallengeThreshold",
    "getChargeLevel",
    "createChallenge",
    "getBank",
    "getBanks",
    "getBankAccountsForUser",
    "getUser",
    "getBankAccount",
    "getBankAccount",
    "getBankAccountsBalances",
    "getCoreBankAccounts",
    "getBankAccountsHeld",
    "checkBankAccountExists",
    "getCounterparty",
    "getCounterpartyTrait",
    "getCounterpartyByCounterpartyId",
    "getCounterpartyByIban",
    "getCounterparties",
    "getTransactions",
    "getTransactionsCore",
    "getTransaction",
    "getPhysicalCards",
    "getPhysicalCardForBank",
    "deletePhysicalCardForBank",
    "getPhysicalCardsForBank",
    "createPhysicalCard",
    "updatePhysicalCard",
    "makePayment",
    "makePaymentv200",
    "makePaymentv210",
    "makePaymentImpl",
    "createTransactionRequest",
    "createTransactionRequestv200",
    "createTransactionRequestv210",
    "createTransactionRequestImpl",
    "createTransactionRequestImpl210",
    "getTransactionRequests",
    "getTransactionRequests210",
    "getTransactionRequestsImpl",
    "getTransactionRequestsImpl210",
    "getTransactionRequestImpl",
    "getTransactionRequestTypesImpl",
    "createTransactionAfterChallenge",
    "createTransactionAfterChallengev200",
    "createTransactionAfterChallengeV210",
    "updateBankAccount",
    "createBankAccount",
    "getProducts",
    "getProduct",
    "createOrUpdateBank",
    "createOrUpdateProduct",
    "getBranch",
    "getBranches",
    "getAtm",
    "getAtms",
    "createTransactionAfterChallengev300",
    "makePaymentv300",
    "createTransactionRequestv300",
    "createCounterparty",
    "checkCustomerNumberAvailable",
    "createCustomer",
    "updateCustomerScaData",
    "updateCustomerCreditData",
    "updateCustomerGeneralData",
    "getCustomersByUserId",
    "getCustomerByCustomerId",
    "getCustomerByCustomerNumber",
    "getCustomerAddress",
    "createCustomerAddress",
    "updateCustomerAddress",
    "deleteCustomerAddress",
    "createTaxResidence",
    "getTaxResidence",
    "deleteTaxResidence",
    "getCustomers",
    "getCheckbookOrders",
    "getStatusOfCreditCardOrder",
    "createUserAuthContext",
    "createUserAuthContextUpdate",
    "deleteUserAuthContexts",
    "deleteUserAuthContextById",
    "getUserAuthContexts",
    "createOrUpdateProductAttribute",
    "getProductAttributeById",
    "getProductAttributesByBankAndCode",
    "deleteProductAttribute",
    "getAccountAttributeById",
    "createOrUpdateAccountAttribute",
    "createAccountAttributes",
    "getAccountAttributesByAccount",
    "createOrUpdateCardAttribute",
    "getCardAttributeById",
    "getCardAttributesFromProvider",
    "createAccountApplication",
    "getAllAccountApplication",
    "getAccountApplicationById",
    "updateAccountApplicationStatus",
    "getOrCreateProductCollection",
    "getProductCollection",
    "getOrCreateProductCollectionItem",
    "getProductCollectionItem",
    "getProductCollectionItemsTree",
    "createMeeting",
    "getMeetings",
    "getMeeting",
    "createOrUpdateKycCheck",
    "createOrUpdateKycDocument",
    "createOrUpdateKycMedia",
    "createOrUpdateKycStatus",
    "getKycChecks",
    "getKycDocuments",
    "getKycMedias",
    "getKycStatuses",
    "createMessage",
    "makeHistoricalPayment",
    "validateChallengeAnswer",
    "getBankLegacy",
    "getBanksLegacy",
    "getBankAccountsForUserLegacy",
    "getBankAccountLegacy",
    "getBankAccountByIban",
    "getBankAccountByRouting",
    "getBankAccounts",
    "getCoreBankAccountsLegacy",
    "getBankAccountsHeldLegacy",
    "checkBankAccountExistsLegacy",
    "getCounterpartyByCounterpartyIdLegacy",
    "getCounterpartiesLegacy",
    "getTransactionsLegacy",
    "getTransactionLegacy",
    "getPhysicalCardsForBankLegacy",
    "createPhysicalCardLegacy",
    "createBankAccountLegacy",
    "getBranchLegacy",
    "getAtmLegacy",
    "getCustomerByCustomerIdLegacy",

    //** not support methods:
    //"getStatus",
    //"getChargeValue",
    //"saveTransactionRequestTransaction",
    //"saveTransactionRequestTransactionImpl",
    //"saveTransactionRequestChallenge",
    //"saveTransactionRequestChallengeImpl",
    //"saveTransactionRequestStatusImpl",
    //"getTransactionRequestStatuses",
    //"getTransactionRequestStatusesImpl",
    // "getTransactionRequestTypes", // final method cant be override
    //"answerTransactionRequestChallenge",
    // "createBankAndAccount",
    // "createSandboxBankAccount",
    // "setAccountHolder",
    // "accountExists",
    // "removeAccount",
    // "getMatchingTransactionCount",
    // "createImportedTransaction",
    // "updateAccountBalance",
    // "setBankAccountLastUpdated",
    // "updateAccountLabel",
    // "updateAccount",
    // "createOrUpdateBranch",
    // "createOrUpdateAtm",
    // "createOrUpdateFXRate",
    // "accountOwnerExists",
    // "createViews",
    // "getCurrentFxRate",
    // "getCurrentFxRateCached",
    // "getTransactionRequestTypeCharge",
    // "UpdateUserAccoutViewsByUsername",
    // "getTransactionRequestTypeCharges",
    //"updateUserAccountViewsOld",

    //    "getEmptyBankAccount", //not useful!
    //    "getCounterpartyFromTransaction", //not useful!
    //    "getCounterpartiesFromTransaction",//not useful!
  )

  ConnectorBuilderUtil.buildMethods(genMethodNames,
    "src/main/scala/code/bankconnectors/storedprocedure/StoredProcedureConnector_vDec2019.scala",
     methodName => s"sendRequest[InBound](${StringHelpers.snakify(methodName)}, req, callContext)")
}

